generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String       @id @default(uuid())
  name      String
  email     String       @unique
  password  String
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  profile   UserProfile?
  blogs     Blog[]
  rooms     RoomParticipants[]
  messages  Message[]
}

model Blog {
  id          String    @id @default(uuid())
  authorId    String
  title       String
  description String
  imageUrl    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation(fields: [authorId], references: [id])
}

model UserProfile {
  id         String   @id @default(uuid())
  userId     String   @unique
  bio        String?
  profession String?
  address    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user       User     @relation(fields: [userId], references: [id])
}

model Room {
  id         String               @id @default(uuid())
  name       String
  coverUrl   String
  createdAt  DateTime             @default(now())
  updatedAt  DateTime             @updatedAt
  participants RoomParticipants[]
  messages   Message[]
}

model RoomParticipants {
  id       String   @id @default(uuid())
  userId   String
  roomId   String
  joinedAt DateTime @default(now())

  user     User     @relation(fields: [userId], references: [id])
  room     Room     @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

model Message {
  id        String   @id @default(uuid())
  userId    String
  roomId    String
  text      String
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])
}
